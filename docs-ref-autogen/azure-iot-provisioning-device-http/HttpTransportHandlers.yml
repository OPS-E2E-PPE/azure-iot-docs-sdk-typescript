### YamlMime:UniversalReference
items:
  - uid: azure-iot-provisioning-device-http.HttpTransportHandlers
    name: HttpTransportHandlers
    fullName: HttpTransportHandlers
    children:
      - azure-iot-provisioning-device-http.HttpTransportHandlers.connect
      - azure-iot-provisioning-device-http.HttpTransportHandlers.disconnect
      - azure-iot-provisioning-device-http.HttpTransportHandlers.getErrorResult
      - >-
        azure-iot-provisioning-device-http.HttpTransportHandlers.queryOperationStatus
      - >-
        azure-iot-provisioning-device-http.HttpTransportHandlers.registrationRequest
    langs:
      - typeScript
    type: class
    summary: ''
    source:
      path: http.ts
      startLine: 19
      remote:
        path: provisioning/transport/http/src\http.ts
        repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
        branch: master
    package: azure-iot-provisioning-device-http
  - uid: azure-iot-provisioning-device-http.HttpTransportHandlers.connect
    name: connect
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function connect(authorization: SharedAccessSignature | X509 | string,
        callback: (err?: Error) => void)
      parameters:
        - id: authorization
          type:
            - SharedAccessSignature | X509 | string
          description: ''
        - id: callback
          type:
            - '(err?: Error) => void'
          description: ''
  - uid: azure-iot-provisioning-device-http.HttpTransportHandlers.disconnect
    name: disconnect
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function disconnect(callback: (err?: Error) => void)'
      parameters:
        - id: callback
          type:
            - '(err?: Error) => void'
          description: ''
  - uid: azure-iot-provisioning-device-http.HttpTransportHandlers.getErrorResult
    name: getErrorResult
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getErrorResult(result: any)'
      parameters:
        - id: result
          type:
            - any
          description: ''
      return:
        type:
          - any
  - uid: >-
      azure-iot-provisioning-device-http.HttpTransportHandlers.queryOperationStatus
    name: queryOperationStatus
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function queryOperationStatus(registrationId: string, operationId:
        string, callback: (err?: Error, responseBody?: any, result?: any,
        pollingInterval?: number) => void)
      parameters:
        - id: registrationId
          type:
            - string
          description: ''
        - id: operationId
          type:
            - string
          description: ''
        - id: callback
          type:
            - >-
              (err?: Error, responseBody?: any, result?: any, pollingInterval?:
              number) => void
          description: ''
  - uid: >-
      azure-iot-provisioning-device-http.HttpTransportHandlers.registrationRequest
    name: registrationRequest
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function registrationRequest(registrationId: string, authorization:
        SharedAccessSignature | X509 | string, requestBody: any,
        forceRegistration: boolean, callback: (err?: Error, responseBody?: any,
        result?: any, pollingInterval?: number) => void)
      parameters:
        - id: registrationId
          type:
            - string
          description: ''
        - id: authorization
          type:
            - SharedAccessSignature | X509 | string
          description: ''
        - id: requestBody
          type:
            - any
          description: ''
        - id: forceRegistration
          type:
            - boolean
          description: ''
        - id: callback
          type:
            - >-
              (err?: Error, responseBody?: any, result?: any, pollingInterval?:
              number) => void
          description: ''
