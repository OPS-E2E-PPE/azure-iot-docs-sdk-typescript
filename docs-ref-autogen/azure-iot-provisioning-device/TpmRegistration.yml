### YamlMime:UniversalReference
items:
  - uid: azure-iot-provisioning-device.TpmRegistration
    name: TpmRegistration
    fullName: TpmRegistration
    children:
      - azure-iot-provisioning-device.TpmRegistration.constructor
      - azure-iot-provisioning-device.TpmRegistration.cancel
      - azure-iot-provisioning-device.TpmRegistration.register
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: EventEmitter
    source:
      path: tpm_registration.ts
      startLine: 7
      remote:
        path: provisioning/device/src\tpm_registration.ts
        repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
        branch: master
    package: azure-iot-provisioning-device
    module: Global
  - uid: azure-iot-provisioning-device.TpmRegistration.constructor
    name: TpmRegistration
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new TpmRegistration(idScope: string, transport:
        TpmProvisioningTransport, securityClient: TpmSecurityClient)
      parameters:
        - id: idScope
          type:
            - string
          description: ''
        - id: transport
          type:
            - TpmProvisioningTransport
          description: ''
        - id: securityClient
          type:
            - '@azure-iot-provisioning-device.TpmSecurityClient'
          description: ''
    module: Global
  - uid: azure-iot-provisioning-device.TpmRegistration.cancel
    name: cancel
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancel(callback: (err?: Error) => void)'
      parameters:
        - id: callback
          type:
            - '(err?: Error) => void'
          description: ''
    module: Global
  - uid: azure-iot-provisioning-device.TpmRegistration.register
    name: register
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function register(registrationId: string, forceRegistration: boolean,
        callback: (err?: Error, result?: any) => void)
      parameters:
        - id: registrationId
          type:
            - string
          description: ''
        - id: forceRegistration
          type:
            - boolean
          description: ''
        - id: callback
          type:
            - '(err?: Error, result?: any) => void'
          description: ''
    module: Global
