### YamlMime:UniversalReference
items:
  - uid: azure-iot-provisioning-device.PollingStateMachine
    name: PollingStateMachine
    fullName: PollingStateMachine
    children:
      - azure-iot-provisioning-device.PollingStateMachine.constructor
      - azure-iot-provisioning-device.PollingStateMachine.cancel
      - azure-iot-provisioning-device.PollingStateMachine.register
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: EventEmitter
    source:
      path: polling_state_machine.ts
      startLine: 13
      remote:
        path: provisioning/device/src\polling_state_machine.ts
        repo: 'https://github.com/Azure/azure-iot-sdk-node.git'
        branch: master
    package: azure-iot-provisioning-device
    module: Global
  - uid: azure-iot-provisioning-device.PollingStateMachine.constructor
    name: PollingStateMachine
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new PollingStateMachine(transport: PollingTransport)'
      parameters:
        - id: transport
          type:
            - PollingTransport
          description: ''
    module: Global
  - uid: azure-iot-provisioning-device.PollingStateMachine.cancel
    name: cancel
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cancel(callback: (err: Error) => void)'
      parameters:
        - id: callback
          type:
            - '(err: Error) => void'
          description: ''
    module: Global
  - uid: azure-iot-provisioning-device.PollingStateMachine.register
    name: register
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function register(request: RegistrationRequest, callback: (err?: Error,
        responseBody?: any, result?: any) => void)
      parameters:
        - id: request
          type:
            - '@azure-iot-provisioning-device.RegistrationRequest'
          description: ''
        - id: callback
          type:
            - '(err?: Error, responseBody?: any, result?: any) => void'
          description: ''
    module: Global
